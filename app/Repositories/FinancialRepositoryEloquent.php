<?php

namespace App\Repositories;

use App\Entities\Collaborator;
use App\Entities\Task;
use App\Events\UpdateReceiptEvent;
use Carbon\Carbon;
use Prettus\Repository\Eloquent\BaseRepository;
use Prettus\Repository\Criteria\RequestCriteria;
use App\Repositories\FinancialRepository;
use App\Entities\Financial;
use App\Validators\FinancialValidator;

/**
 * Class FinancialRepositoryEloquent
 * @package namespace App\Repositories;
 */
class FinancialRepositoryEloquent extends BaseRepository implements FinancialRepository
{
    /**
     * Specify Model class name
     *
     * @return string
     */
    public function model()
    {
        return Financial::class;
    }

    /**
    * Specify Validator class name
    *
    * @return mixed
    */
    public function validator()
    {

        return FinancialValidator::class;
    }

    public function update(array $attributes, $id)
    {
        $file = $attributes['receipt'];
        $collab = Collaborator::find($attributes['collaborator_id']);
        $today = Carbon::now()->format('d-m-Y');
        $attributes['receipt'] = trim($collab->name.'-'.$today.'.'.$file->guessExtension());
        $event = new UpdateReceiptEvent($file, $this->find($id) ,$collab);
        event($event);
        return parent::update($attributes, $id); // TODO: Change the autogenerated stub
    }



    /*public function create(array $attributes)
     {
         $collab = Collaborator::find($attributes['collaborator_id']);
         $today = Carbon::now()->format('d-m-Y');
         if($attributes['receipt'] == null){
             $attributes['receipt'] = null;
         }
         return parent::create($attributes); // TODO: Change the autogenerated stub
     }*/


    /**
     * Boot up the repository, pushing criteria
     */
    public function boot()
    {
        $this->pushCriteria(app(RequestCriteria::class));
    }
}
